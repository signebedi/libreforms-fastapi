{% extends "base.html.jinja" %}

{% block title %}
{{config.SITE_NAME}} â€” Manage Submissions
{% endblock %}

{% block header %}
    <link href="{{ url_for('static', path='css/datatables.css') }}" rel="stylesheet">
    <style>
    table.dataTable tbody td {
        word-break: break-word;
        vertical-align: top;
    }
    </style>
{% endblock %}

{% block content %}
<h4>
    Manage Submissions
    <sup title="This is an admin page">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-star-fill" viewBox="0 0 16 16">
            <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z"/>
        </svg>
    </sup>
</h4>


<hr>

<div class="container" id="manageSubmissions">

</div>

{% endblock %}


{% block scripts %}
<script src="{{url_for('static', path='js/datatables.js')}}"></script>

<script>

    var apiKey = "{{ request.user.api_key }}";


function deleteForm(formName, documentId) {
    $.ajax({
        url: `/api/admin/delete_form/${formName}/${documentId}`,
        type: 'DELETE',
        headers: {
            'X-API-KEY': apiKey,
        },
        dataType: 'json',

        success: function(response) {
            setFlashMessage("Successfully deleted form", AlertCategories.SUCCESS);
            window.location.reload();

        },

        error: function(xhr) {
            // Handle errors
            console.error('Failed to delete form', xhr.responseText);
            // Display error message to the user
            flashMessage(xhr.responseText, 'danger'); 
        }
    });
}



function restoreForm(formName, documentId) {
    $.ajax({
        url: `/api/admin/restore_form/${formName}/${documentId}`,
        type: 'PATCH',
        headers: {
            'X-API-KEY': apiKey,
        },
        dataType: 'json',

        success: function(response) {
            setFlashMessage("Successfully restored form", AlertCategories.SUCCESS);
            window.location.reload();

        },

        error: function(xhr) {
            // Handle errors
            console.error('Failed to restore form', xhr.responseText);
            // Display error message to the user
            flashMessage(xhr.responseText, 'danger'); 
        }
    });
}


    $(document).ready(function() {

        function renderTable(submissions, tableName) {
            var table = `<table class="table table-hover table-striped table-light" id="${tableName}"><thead><tr>`;
            // Define the headers based on the required attributes
            table += '<th>Record</th><th>Form</th><th>Last Editor</th><th>Last Modified</th><th>Created By</th><th>Created At</th>';
            table += '</tr></thead><tbody>';



            // Iterate over the array of users
            submissions.forEach(function(submission) {


                if ( submission['metadata']['is_deleted'] == true ){

                    table += `<tr>
                        <td title="View submission actions" class="nav-item dropdown">
                            <a style="opacity: 0.6;" class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">${submission['metadata']['document_id']}</a>
                            <div class="dropdown-menu">
                                <a class="dropdown-item" href="/ui/form/read_one/${submission['metadata']['form_name']}/${submission['metadata']['document_id']}">View Submission</a> 
                                <a class="dropdown-item" id="deleteLink" onclick="restoreForm('${submission['metadata']['form_name']}', '${submission['metadata']['document_id']}');" href="#">Restore Form</a>

                            </div>
                        </td>
                        <td style="opacity: 0.6;">${submission['metadata']['form_name'].replace(/_/g, ' ')}</td>
                        <td style="opacity: 0.6;">${submission['metadata']['last_editor']}</td>
                        <td style="opacity: 0.6;"><span title="${submission['metadata']['last_modified']}">${prettifyTimeDiff(submission['metadata']['last_modified'], "{{config['TIMEZONE']|string}}")}</span></td>
                        <td style="opacity: 0.6;">${submission['metadata']['created_by']}</td>
                        <td style="opacity: 0.6;"><span title="${submission['metadata']['created_at']}">${prettifyTimeDiff(submission['metadata']['created_at'], "{{config['TIMEZONE']|string}}")}</span></td>
                    </tr>`;

                } else {

                    table += `<tr>
                        <td title="View submission actions" class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">${submission['metadata']['document_id']}</a>
                            <div class="dropdown-menu">
                                <a class="dropdown-item" href="/ui/form/read_one/${submission['metadata']['form_name']}/${submission['metadata']['document_id']}">View Submission</a> 
                                <a class="dropdown-item" id="deleteLink" onclick="deleteForm('${submission['metadata']['form_name']}', '${submission['metadata']['document_id']}');" href="#">Delete Form</a>

                            </div>
                        </td>
                        <td>${submission['metadata']['form_name'].replace(/_/g, ' ')}</td>
                        <td>
                            <a target="_blank" href="/ui/auth/p/${submission['metadata']['last_editor']}" class="badge bg-primary text-decoration-none" style=" {%if not config['OTHER_PROFILES_ENABLED'] and not request.user.site_admin%} pointer-events: none;{%endif%}" aria-label="Link to ${submission['metadata']['last_editor']}">
                                ${submission['metadata']['last_editor']}
                            </a>
                        </td>
                        <td><span title="${submission['metadata']['last_modified']}">${prettifyTimeDiff(submission['metadata']['last_modified'], "{{config['TIMEZONE']|string}}")}</span></td>
                        <td>
                            <a target="_blank" href="/ui/auth/p/${submission['metadata']['created_by']}" class="badge bg-primary text-decoration-none" style=" {%if not config['OTHER_PROFILES_ENABLED'] and not request.user.site_admin%} pointer-events: none;{%endif%}" aria-label="Link to ${submission['metadata']['created_by']}">
                                ${submission['metadata']['created_by']}
                            </a>
                        </td>
                        <td><span title="${submission['metadata']['created_at']}">${prettifyTimeDiff(submission['metadata']['created_at'], "{{config['TIMEZONE']|string}}")}</span></td>
                    </tr>`;
            }
            });




            table += '</tbody></table>';
            return table;
        }

        function fetchSubmissions() {
            $.ajax({
                url: `/api/admin/get_submissions`,
                type: 'GET',
                headers: {
                    'X-API-KEY': apiKey,
                },
                dataType: 'json',

                success: function(response) {

                    var submissionsTable = renderTable(response.submissions, "submissionsTable"); 
                    $('#manageSubmissions').html(submissionsTable);

                    $('#submissionsTable').DataTable({
                        autoWidth: false,
                        // This is a fix to properly sort prettified datetimes
                        columnDefs: [
                            { 
                                targets: [3, 5], 
                                render: function(data, type, row) {
                                    var date = $(data).attr('title'); 
                                    return type === 'sort' ? date : data; 
                                }
                            }
                        ]
                    });
                },

                error: function(xhr) {
                    // Handle errors
                    console.error('Failed to fetch data', xhr.responseText);
                    // Display error message
                    flashMessage(xhr.responseText, 'danger'); 
                }
            });
        }

        fetchSubmissions();




    });
</script>
{% endblock %}