{% extends "base.html.jinja" %}

{% block title %}
{{ config.SITE_NAME }} â€” Document Database Configuration
{% endblock %}

{% block content %}
<h1>
    Document Database Configuration
    <sup title="This is an admin page">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-star-fill" viewBox="0 0 16 16">
            <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z"/>
        </svg>
    </sup>
</h1>
<p>You should run "test connection" before saving to avoid breaking the application.</p>
<hr>

<form id="siteConfigForm">

    <!-- Checkbox for MONGODB_ENABLED -->
    <fieldset style="padding-top: 10px;" class="form-check">
        <div class="form-check form-switch">
            <input class="form-check-input" type="checkbox" name="mongodbEnabled" id="mongodbEnabled" onchange="updateLabel(this, 'MongoDB Enabled', 'MongoDB Disabled')" {% if config.MONGODB_ENABLED %}checked{% endif %}>
            <label class="form-check-label" for="mongodbEnabled">Enable MongoDB</label>
        </div>
    </fieldset>

    <!-- Text input for MONGODB_URI -->
    <fieldset style="padding-top: 10px;" class="form-check">
        <div class="form-group">
            <label for="mongodbUri">MongoDB URI</label>
            <input type="text" class="form-control" id="mongodbUri" value="{{ config.MONGODB_URI }}">
        </div>
    </fieldset>


    <fieldset style="padding-top: 10px;" class="form-check">
        <button type="submit" class="btn btn-primary" id="updateSiteButton">Update</button>
        <button type="button" class="btn btn-secondary" id="testButton">Test Connection</button>
    </fieldset>

</form>
{% endblock %}

{% block scripts %}
<script>

function updateLabel(checkbox, enabledText, disabledText) {
    var label = checkbox.nextElementSibling;
    label.textContent = checkbox.checked ? enabledText : disabledText;
}

$(document).ready(function() {

    var apiKey = "{{ request.user.api_key }}"; 

    $('#siteConfigForm').submit(function(event) {
        event.preventDefault();
        var formData = {
            "content": {
                "MONGODB_ENABLED": $('#mongodbEnabled').is(':checked'),
                "MONGODB_URI": $('#mongodbUri').val()
            }
        };

        $.ajax({
            url: `/api/admin/update_site_config`,
            type: 'POST',
            headers: {
                'X-API-KEY': apiKey,
            },
            data: JSON.stringify(formData),
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            success: function(response) {
                flashMessage("Successfully updated site configuration", "success");
            },
            error: function(xhr) {
                console.error('Operation failed', xhr.responseText);
                flashMessage(xhr.responseText, 'warning');
            }
        });
    });


    // Test button click event
    $('#testButton').click(function() {
        event.preventDefault();
        var formData = {
            "content": {
                "MONGODB_ENABLED": $('#mongodbEnabled').is(':checked'),
                "MONGODB_URI": $('#mongodbUri').val()
            }
        };

        $.ajax({
            url: '/api/admin/test_document_database',
            type: 'POST',
            headers: {
                'X-API-KEY': apiKey,
            },
            data: JSON.stringify(formData),
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            success: function(response) {
                if (response.status === "success") {
                    flashMessage("Document Database Connection Successful", "success");
                } else {
                    flashMessage("Document Database Connection Failed: " + response.message, "danger");
                }
            },
            error: function(xhr) {
                console.error('Document Database Test failed', xhr.responseText);
                flashMessage("Error testing Document Database connection: " + xhr.responseText, 'danger');
            }
        });
    });

    // Initialize label texts based on current checkbox states
    $('#siteConfigForm input[type="checkbox"]').each(function() {
        this.dispatchEvent(new Event('change'));
    });
});

</script>
{% endblock %}
