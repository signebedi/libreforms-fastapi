{% extends "base.html.jinja" %}

{% block title %}
{{config.SITE_NAME}} â€” Edit Docs
{% endblock %}


{% block content %}
<h1>
    Edit Documentation
    <sup title="This is an admin page">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-star-fill" viewBox="0 0 16 16">
            <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z"/>
        </svg>
    </sup>
</h1>
<hr>

<form id="docsForm">

    <fieldset class="form-check" style="padding-top: 10px;">
        <label aria-labelledby="docsDescription" for="content" class="form-check-label">Documentation</label>
        <span id="docsDescription" class="form-text">| Update the documentation for the site using this page</span>
        <textarea class="form-control" id="content" name="content" rows="10" style="resize: vertical; max-height: 50%;" required>{{ docs_markdown }}</textarea>
    </fieldset>

    <fieldset style="padding-top: 10px;" class="form-check">
        <button type="submit" class="btn btn-primary" id="updateButton">Update</button>
    </fieldset>


</form>
{% endblock %}


{% block scripts %}
<script>
$(document).ready(function() {
    // Form submission event
    $('#docsForm').submit(function(event) {

        event.preventDefault();

        var formData = {
            "content": $('#content').val()
        };

        console.log(formData)

        // Assuming the user's API key is added in the form as a hidden field or accessible in some other way
        var apiKey = "{{ request.user.api_key }}"; // Adjust based on actual access method

        $.ajax({
            url: `/api/admin/edit_docs`,
            type: 'POST',
            headers: {
                'X-API-KEY': apiKey,
            },
            data: JSON.stringify(formData),
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            success: function(response) {
                // Flash success on screen
                flashMessage("Successfully updated documentation", AlertCategories.SUCCESS);
                
            },
            error: function(xhr) {
                // Handle errors, e.g., show an error message
                console.error('Form creation failed', xhr.responseText);
                // Implement flashMessage or another way to show errors to the user
                flashMessage(xhr.responseText, 'warning');
            }
        });
    });
});
</script>
{% endblock %}