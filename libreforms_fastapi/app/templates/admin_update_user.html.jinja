{% extends "base.html.jinja" %}

{% block header %}
    <link href="{{ url_for('static', path='css/datatables.css') }}" rel="stylesheet">
{% endblock %}


{% block title %}
{{config.SITE_NAME}} â€” Update User
{% endblock %}

{% block content %}
<h1>
    Update User
    <sup title="This is an admin page">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-star-fill" viewBox="0 0 16 16">
            <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z"/>
        </svg>
    </sup>
</h1>
<hr>

<form id="registrationForm">

    <fieldset style="padding-top: 10px;" class="form-check" disabled>
        <label aria-labelledby="usernameHelpInline" for="username" class="form-check-label">Username</label>
         <span id="usernameHelpInline" class="form-text">
        | {{ config['USERNAME_HELPER_TEXT'] }}
        </span>
        <input type="text" id="username" name="username" style="color: #333;" value="{{existing_user.username}}" class="form-control">
    </fieldset>
    
    <fieldset style="padding-top: 10px;" class="form-check" disabled>
        <label aria-labelledby="emailHelpInline" for="email" class="form-check-label">Email</label>
         <span id="emailHelpInline" class="form-text">
        | Please enter an email for this user
        </span>
        <input type="email" class="form-control" id="email" style="color: #333;" value="{{existing_user.email}}" name="email">
    </fieldset>



    <fieldset style="padding-top: 10px;" class="form-check">
        <label aria-labelledby="groupsHelpInline" for="groups" class="form-label">Groups</label>
        <span id="groupsHelpInline" class="form-text">
            | Please select which groups this user will be added to
        </span>
        {% for group in available_groups %}
        <div class="form-check">
            <input type="checkbox" class="form-check-input" id="group-{{ loop.index }}" name="groups" value="{{ group }}"{% if group in existing_user['groups'] %} checked{% endif %}>
            <label class="form-check-label" for="group-{{ loop.index }}">{{ group }}</label>
        </div>
        {% endfor %}
    </fieldset>



    <fieldset style="padding-top: 10px;" class="form-check">
        <button type="submit" class="btn btn-primary" id="updateButton">Update</button>
    </fieldset>

</form>

{% endblock %}


{% block scripts %}
<script src="{{url_for('static', path='js/datatables.js')}}"></script>
<script>
    $(document).ready(function() {

        var apiKey = "{{ request.user.api_key }}";
        var userId = "{{ id }}";

        $('#registrationForm').on('submit', function(event) {
            event.preventDefault(); // Stop the form from submitting normally

            const updateButton = document.getElementById('updateButton')
            updateButton.disabled=true; 
            updateButton.value='Updating...';


            // Prepare form data
            var groups = [];
            $('input[type="checkbox"]:checked').each(function() {
                groups.push(this.value);
            });

            // Prepare form data
            var formData = {
                username: $('#username').val().trim(),
                email: $('#email').val().trim(),
                groups: groups
            };

            // AJAX POST request to the API endpoint
            $.ajax({
                url: `/api/admin/update_user/${userId}`,
                type: 'PUT',
                headers: {
                    'X-API-KEY': apiKey,
                },
                contentType: 'application/json', // Ensure to set the content type
                data: JSON.stringify(formData), // Convert formData to JSON format
                success: function(response) {
                    // Handle success
                    console.log('User updated successfully', response);
                    
                    // Stash a flashed success message and redirect
                    setFlashMessage(response.message, "success");
                    window.location.href = '/ui/admin/manage_users';
                },
                error: function(xhr) {
                    // Handle errors
                    console.error('Group update failed.', xhr.responseText);
                    // Display error message
                    flashMessage(xhr.responseText, AlertCategories.WARNING); 
                }
            });

            // Here we restore the submit button
            updateButton.disabled = false;
            updateButton.value='Update';


        });



    });
</script>
{% endblock %}