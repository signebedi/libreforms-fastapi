{% extends "read_one_form.html.jinja" %}

{% block header %}
    <link href="{{ url_for('static', path='css/datatables.css') }}" rel="stylesheet">
{% endblock %}

{% block title %}
{{config.SITE_NAME}} â€” Individual Form Review & Approval 
{% endblock %}

{% block approval_interface %}


{# <table>
    <tr>
        <td>
        </td>
    </tr>
</table>         #}


<h4>Individual Form Review & Approval</h4>
<p>You are currently in the Review & Approval interface for this submission. You can see its details below. If you would like to go back to the general Review & Approval page, click <a href="/ui/form/review_and_approval">here</a>. If you would like to view this submission outside the Review & Approval interface, click <a href="/ui/form/read_one/{{ form_name }}/{{ document_id }}">here</a>.</p>
{# <p>The current stage for this submission is <span id="currentFormStage"></span>.</p> #}
<button onclick="signForm();" id="form_approval" class="btn btn-primary" disabled>I approve this submission</button>
<button onclick="disapproveForm();" id="form_disapproval" class="btn btn-secondary" disabled>I disapprove this submission</button>

<hr>



{% endblock %}


{% block addl_js %}

{# Add some logic here that redirects if the current user is not an authorized approver... #}
<script>


    const approveButton = document.getElementById('form_approval')
    const disapproveButton = document.getElementById('form_disapproval')
    approveButton.disabled=true; 
    disapproveButton.disabled=true; 

    function signForm() {
        $.ajax({
            url: `/api/form/sign/${formName}/${documentId}`,
            type: 'PATCH',
            headers: {
                'X-API-KEY': apiKey,
            },
            dataType: 'json',

            success: function(response) {
                setFlashMessage("Successfully signed form", AlertCategories.SUCCESS);
                window.location.href = '/ui/form/review_and_approval';

            },

            error: function(xhr) {
                // Handle errors
                console.error('Failed to sign form', xhr.responseText);
                // Display error message to the user
                // flashMessage(xhr.responseText, 'danger'); 
            }
        });
    }


    function disapproveForm() {
        $.ajax({
            url: `/api/form/sign/${formName}/${documentId}`,
            type: 'PATCH',
            headers: {
                'X-API-KEY': apiKey,
            },
            dataType: 'json',

            success: function(response) {
                setFlashMessage("Successfully signed form", AlertCategories.SUCCESS);
                window.location.href = '/ui/form/review_and_approval';

            },

            error: function(xhr) {
                // Handle errors
                console.error('Failed to sign form', xhr.responseText);
                // Display error message to the user
                // flashMessage(xhr.responseText, 'danger'); 
            }
        });
    }

    function fetchActionNeededData(callback) {
        $.ajax({
            url: `/api/form/read_all_needing_action`,
            type: "GET",
            dataType: 'json',
            beforeSend: function(xhr){xhr.setRequestHeader('X-API-KEY', apiKey);},
            success: function(formData) {
                // Call the callback function with the data
                callback(null, formData.documents);
                // console.log(formData);
            },
            error: function(xhr, status, error) {
                // Call the callback function with the error
                callback(error);

            }
        });
    }


    // Usage example
    function checkDocumentId(formName, documentId) {
        fetchActionNeededData(function(error, documents) {
            if (error) {
                console.error('Error fetching data:', error);
                setFlashMessage("Error validating document for review", AlertCategories.WARNING);
                window.location.href = '/ui/form/review_and_approval';
            } else {

                // Check if formName exists and is an array
                if (!documents.hasOwnProperty(formName) || !Array.isArray(documents[formName])) {
                    console.error(`Form ${formName} not found or is not an array`);
                    setFlashMessage(`Error validating document for review`, AlertCategories.WARNING);
                    window.location.href = '/ui/form/review_and_approval';
                    return;
                }

                // Check if the documentId exists in the formName array
                if (!documents[formName].includes(documentId)) {
                    console.error(`Document ID ${documentId} not found in form ${formName}`);
                    setFlashMessage(`Error validating document for review`, AlertCategories.WARNING);
                    window.location.href = '/ui/form/review_and_approval';
                    return;
                }

                // If everything is correct, enable the buttons
                approveButton.disabled = false;
                disapproveButton.disabled = false;

            }
        });
    }

    checkDocumentId("{{ form_name }}", "{{ document_id }}");

</script>
{% endblock %}
