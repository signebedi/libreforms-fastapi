{% extends "base.html.jinja" %}

{% block title %}
{{config.SITE_NAME}} â€” Change Password
{% endblock %}

{% block content %}
<h1>Change Password</h1>
<form id="changePasswordForm">


    <fieldset style="padding-top: 10px;" class="form-check">
        <label aria-labelledby="currentPasswordHelpInline" for="current_password" class="form-check-label">Current Password</label>
        <span id="currentPasswordHelpInline" class="form-text">
        | Please enter your current password.
        </span>
        <input type="password" id="current_password" name="current_password" class="form-control" required>
    </fieldset>

    <fieldset style="padding-top: 10px;" class="form-check">
        <label aria-labelledby="passwordHelpInline" for="password" class="form-check-label">New Password</label>
        <span id="passwordHelpInline" class="form-text">
        | {{config['PASSWORD_HELPER_TEXT']}}
        </span>
        <input type="password" id="password" name="password" class="form-control" 
            onchange="validateField('password', /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/, 'Invalid password. Password must be at least 8 characters long, and include at least one uppercase letter, one lowercase letter, one symbol, and one number.')" required>
        {# Password must be at least 8 characters long, and include at least one uppercase letter, one lowercase letter, and one number. #}
        <div class="valid-feedback" id="password-is-valid" style="display: none;">This field is valid!</div>
        <div class="invalid-feedback" id="password-is-invalid" style="display: none;"></div>
    </fieldset>

    <fieldset style="padding-top: 10px;" class="form-check">
        <label aria-labelledby="confirmPasswordHelpInline" for="confirmPassword" class="form-check-label">Confirm New Password</label>
        <span id="confirmPasswordHelpInline" class="form-text">
        | Please re-enter your password here
        </span>
        <input type="password" id="confirmPassword" class="form-control" onchange="validateConfirmPassword()" required>
        <div class="valid-feedback">Passwords match!</div>
        <div class="invalid-feedback" id="confirmPassword-is-invalid">Passwords do not match.</div>
    </fieldset>

    <fieldset style="padding-top: 10px;" class="form-check">
        <button type="submit" class="btn btn-primary" id="updateButton">Update</button>
    </fieldset>

</form>
{% endblock %}





{% block scripts %}
<script>
var apiKey = "{{ request.user.api_key }}"; 

$(document).ready(function() {
    var submitBtn = $('#changePasswordForm button[type="submit"]');
    submitBtn.prop('disabled', true); // Initially disable the submit button

    window.validateField = function(fieldId, regex, invalidMessage) {
        var field = $('#' + fieldId);
        var value = field.val();
        var isValid = regex.test(value);

        var feedbackId = fieldId + '-is-' + (isValid ? 'valid' : 'invalid');
        var oppositeFeedbackId = fieldId + '-is-' + (isValid ? 'invalid' : 'valid');

        $('#' + feedbackId).show().text(isValid ? 'This field is valid!' : invalidMessage);
        $('#' + oppositeFeedbackId).hide();
        
        field.removeClass(isValid ? 'is-invalid' : 'is-valid');
        field.addClass(isValid ? 'is-valid' : 'is-invalid');

        updateSubmitButton();
    };

    window.validateConfirmPassword = function() {
        var password = $('#password').val();
        var confirmPassword = $('#confirmPassword').val();

        var isMatch = password === confirmPassword;
        $('#confirmPassword').removeClass(isMatch ? 'is-invalid' : 'is-valid');
        $('#confirmPassword').addClass(isMatch ? 'is-valid' : 'is-invalid');
        $('#confirmPassword-is-invalid').toggle(!isMatch);

        updateSubmitButton();
    };

    function updateSubmitButton() {
        var isPasswordValid = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/.test($('#password').val());
        var arePasswordsMatching = $('#password').val() === $('#confirmPassword').val();

        submitBtn.prop('disabled', !(isPasswordValid && arePasswordsMatching));
    }


    $('#changePasswordForm').on('submit', function(event) {
        event.preventDefault(); // Stop the form from submitting normally

        const updateButton = document.getElementById('updateButton')
        updateButton.disabled=true; 
        updateButton.value='Updating...';

        // Perform your validation checks here
        // Only proceed if all validations pass
        var isPasswordValid = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/.test($('#password').val());
        var arePasswordsMatching = $('#password').val() === $('#confirmPassword').val();

        if (isPasswordValid && arePasswordsMatching) {
            // Prepare form data
            var formData = {
                old_password: $('#current_password').val().trim(),
                new_password: $('#password').val().trim(),
                verify_new_password: $('#confirmPassword').val().trim(),
            };

            // AJAX POST request to the API endpoint
            $.ajax({
                url: '/api/auth/change_password', // API endpoint for user creation
                type: 'POST',
                headers: {
                    'X-API-KEY': apiKey,
                },
                contentType: 'application/json', // Ensure to set the content type
                data: JSON.stringify(formData), // Convert formData to JSON format
                success: function(response) {
                    // Handle success
                    console.log('Password changed successfully', response);
                    
                    // Stash a flashed success message and redirect
                    setFlashMessage("Password changed successfully!", "success");
                    window.location.href = '/ui/auth/profile';
                },
                error: function(xhr) {
                    // Handle errors
                    console.error('Password change failed.', xhr.responseText);
                    // Display error message
                    flashMessage(xhr.responseText, AlertCategories.WARNING); 
                }
            });
        } else {
            // Handle validation failure
            console.error('Validation failed');
            flashMessage('Validation failed. Please check your inputs.', AlertCategories.WARNING); 
        }

        // Here we restore the submit button
        updateButton.disabled = false;
        updateButton.value='Update';


    });


});


</script>

{% endblock %}